name: Calculator Package
on:
    push:
        branches: ['main']
jobs:
    build-calculator-package:
        runs-on: ubuntu-latest
        steps:
            - name: Get the sources
              uses: actions/checkout@v2
              with:
                fetch-depth: 0
            - name: Setup .NET Core
              uses: actions/setup-dotnet@v3
              with:
                dotnet-version: 7.x
            - name: Install GitVersion
              uses: gittools/actions/gitversion/setup@v0.10.2
              with:
                versionSpec: '5.x'
            - name: Determine package version
              id: gitversion
              uses: gittools/actions/gitversion/execute@v0
            - name:  Display GitVersion outputs
              run: |
                echo "Major: ${{ steps.gitversion.outputs.major }}"
                echo "Minor: ${{ steps.gitversion.outputs.minor }}"
                echo "Patch: ${{ steps.gitversion.outputs.patch }}"
                echo "PreReleaseTag: ${{ steps.gitversion.outputs.preReleaseTag }}"
                echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.preReleaseTagWithDash }}"
                echo "PreReleaseLabel: ${{ steps.gitversion.outputs.preReleaseLabel }}"
                echo "PreReleaseNumber: ${{ steps.gitversion.outputs.preReleaseNumber }}"
                echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.weightedPreReleaseNumber }}"
                echo "BuildMetaData: ${{ steps.gitversion.outputs.buildMetaData }}"
                echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.buildMetaDataPadded }}"
                echo "FullBuildMetaData: ${{ steps.gitversion.outputs.fullBuildMetaData }}"
                echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
                echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
                echo "LegacySemVer: ${{ steps.gitversion.outputs.legacySemVer }}"
                echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.legacySemVerPadded }}"
                echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
                echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}"
                echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
                echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
                echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"
                echo "EscapedBranchName: ${{ steps.gitversion.outputs.escapedBranchName }}"
                echo "Sha: ${{ steps.gitversion.outputs.sha }}"
                echo "ShortSha: ${{ steps.gitversion.outputs.shortSha }}"
                echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
                echo "NuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}"
                echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.nuGetPreReleaseTagV2 }}"
                echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.nuGetPreReleaseTag }}"
                echo "VersionSourceSha: ${{ steps.gitversion.outputs.versionSourceSha }}"
                echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
                echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}"
                echo "UncommittedChanges: ${{ steps.gitversion.outputs.uncommittedChanges }}"
                echo "CommitDate: ${{ steps.gitversion.outputs.commitDate }}"   
            - name: Install Dependencies
              run: dotnet restore ${{github.workspace}}/CalculatorEngine/CalculatorEngine.csproj
            - name: Build the project
              run: dotnet build ${{github.workspace}}/CalculatorEngine/CalculatorEngine.csproj --configuration Release --no-restore
            - name: Pack
              run: dotnet pack ${{github.workspace}}/CalculatorEngine/CalculatorEngine.csproj --output ./artifacts --configuration Release -p:Version=${{ steps.gitversion.outputs.nuGetVersionV2 }}
            - name: Upload artifacts
              uses: actions/upload-artifact@v2
              with:
                name: nupkg
                path: ./artifacts/*.nupkg
    publish-nuget:
        needs: build-calculator-package
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        steps:
          - name: Download artifact
            uses: actions/download-artifact@v3
            with:
                name: nupkg
          - name: Setup .NET Core
            uses: actions/setup-dotnet@v3
            with:
                dotnet-version: 7.x
          - name: Add Package Source
            run: dotnet nuget add source https://nuget.pkg.github.com/virtualdeepak/index.json -n github -u virtualdeepak -p ${{secrets.NUGETAPIKEY}} --store-password-in-clear-text
          - name: Publish the package
            run: dotnet nuget push ./nupkg/**.nupkg --source github --api-key ${{secrets.NUGETAPIKEY}} 
     
          



                
